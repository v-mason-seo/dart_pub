name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      # We want to see the results on edge even if beta fails (and vice versa).
      # This prevents one failure from stopping the entire run.
      fail-fast: false

      matrix:
        # Include newest and latest versions of Windows, plus Ubuntu (to make
        # sure that tests don't fail on a non-supported platform).
        os: [windows-latest, windows-2016, ubuntu-latest]

        sdk: [stable, dev, main]

        # One SDK version is plenty on Ubuntu. It's a safety test. Similarly,
        # it's unlikely that we'll find unique bugs associated with running the
        # oldest Windows version on leading-edge Dart releases that won't be
        # caught by running on the latest Windows version.
        exclude:
          - os: ubuntu-latest
            sdk: main
          - os: ubuntu-latest
            sdk: dev
          - os: windows-2016
            sdk: main
          - os: windows-2016
            sdk: dev

    steps:
      - name: Fetch sources
        uses: actions/checkout@v2

      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{matrix.sdk}}

      - name: Print Dart SDK version
        run: dart --version

      - name: Install dependencies
        run: dart pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        run: dart analyze --fatal-warnings

      - name: Run tests
        run: dart test
