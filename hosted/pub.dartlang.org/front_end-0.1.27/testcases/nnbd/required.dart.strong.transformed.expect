library;
import self as self;
import "dart:core" as core;

typedef Typedef1 = ({a: core::int, required b: core::int}) → dynamic;
typedef Typedef2 = ({a: core::int, required b: core::int}) → dynamic;
class Class extends core::Object {
  synthetic constructor •() → self::Class*
    : super core::Object::•()
    ;
  method method({core::int a = #C1, required core::int b = #C1, required final core::int c = #C1, required covariant final core::int d = #C1}) → dynamic {}
}
static field ({a: core::int, required b: core::int}) → dynamic field;
static method method({core::int a = #C1, required core::int b = #C1, required final core::int c = #C1}) → dynamic {}
static method main() → dynamic {}

constants  {
  #C1 = null
}
